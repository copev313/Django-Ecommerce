{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","components/GrowingLoader.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_FEATURED_REQUEST","PRODUCT_FEATURED_SUCCESS","PRODUCT_FEATURED_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productFeatured","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","Control","placeholder","name","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","username","maxLength","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","height","width","viewBox","xmlns","d","fill","cx","cy","r","Toggle","aria-controls","Collapse","Nav","Link","isAdmin","NavDropdown","title","Item","class","length","substr","onClick","removeItem","Footer","Row","Col","href","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","GrowingLoader","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","indicators","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","writeDate","timestamp","time","substring","parseInt","Date","toLocaleDateString","month","day","year","ListGroup","description","category","countInStock","xs","disabled","featured","fontSize","review","createdAt","productId","post","Group","Label","size","controlId","rows","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","test","String","toLowerCase","validateEmail","Feedback","ProfileScreen","alertVariant","setAlertVariant","loadingOrders","errorOrders","onClose","dismissible","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","replace","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","num","formatTimestamp","date","dateFormatted","hours","timeFormatted","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","slice","amount","onSuccess","paymentResult","payOrder","confirm","deliverOrder","fontWeight","OrderListScreen","bordered","hover","rel","UserListScreen","successDelete","deleteHandler","delete","deleteUser","paddingRight","padding","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProductHandler","deleteProduct","brand","paddingTop","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","setFeatured","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","aria-label","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.64d0a6c5.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_FEATURED_REQUEST = 'PRODUCT_FEATURED_REQUEST';\r\nexport const PRODUCT_FEATURED_SUCCESS = 'PRODUCT_FEATURED_SUCCESS';\r\nexport const PRODUCT_FEATURED_FAIL = 'PRODUCT_FEATURED_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","\r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import { \r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productFeaturedReducer,\r\n\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n\r\n} from './reducers/userReducers';\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n\r\n} from './reducers/orderReducers';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productFeatured: productFeaturedReducer,\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store;\r\n","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_FEATURED_REQUEST,\r\n    PRODUCT_FEATURED_SUCCESS,\r\n    PRODUCT_FEATURED_FAIL,\r\n\r\n} from '../constants/productConstants';\r\n\r\n\r\nexport const productListReducer = (state = { products:[] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { \r\n                loading: true,\r\n                products: [] \r\n            }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages,\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product:{reviews:[]} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { \r\n                loading: true,\r\n                ...state\r\n            }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state={}, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state={}, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true,\r\n                product:action.payload\r\n            }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state={ product: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true,\r\n                product:action.payload\r\n            }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state={}, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productFeaturedReducer = (state={ products: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_FEATURED_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_FEATURED_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_FEATURED_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state={ cartItems:[], shippingAddress: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find( (x) => \r\n                x.product === item.product\r\n            )\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map( (x) => \r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter( (x) => \r\n                    x.product !== action.payload \r\n                )\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        \r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        \r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants';\r\n\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user:{} }, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = {users:[]}, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {  \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants';\r\n\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {    \r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {    \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (\r\n    state= { loading:true, orderItems:[], shippingAddress:{} }, action) => {\r\n\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { \r\n            ...state,\r\n            loading: true,\r\n        }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {    \r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {    \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {    \r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {    \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\r\n\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {    \r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {    \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = {orders:[]}, action) => {\r\n\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {    \r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {    \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {    \r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {    \r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }\r\n        else {\r\n            history.push(\r\n                history.push(history.location.pathname)\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Form \r\n            onSubmit={ submitHandler }\r\n            className=\"d-flex mt-2\"\r\n        >\r\n            <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Find products and stuff...\"\r\n                name=\"q\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className=\"mr-3 pr-5\"\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type=\"submit\"\r\n                className=\"py-0 px-3\"\r\n                variant=\"dark\"\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    //USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    //USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_LOGIN_REQUEST, \r\n        })\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config,\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_LOGIN_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_REGISTER_REQUEST, \r\n        })\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config,\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({ \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_REGISTER_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_DETAILS_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n            \r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config,\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_DETAILS_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_UPDATE_PROFILE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            '/api/users/profile/update/',\r\n            user,\r\n            config,\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({ \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_LIST_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/users/',\r\n            config,\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_LIST_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_DELETE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config,\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_DELETE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: USER_UPDATE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({ \r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usernameTruncate = (username, maxLength) => {\r\n        if(username.length > maxLength && maxLength > 0) {\r\n            username = username.substr(0, maxLength) + \"...\"\r\n        }\r\n        return username\r\n    }\r\n\r\n    const logoutHandler = () => {\r\n        dispatch( logout() )\r\n    }\r\n\r\n\r\n    return (\r\n        <header>\r\n\r\n            <Navbar className=\"pt-3 pb-4\"\r\n                    bg=\"dark\"\r\n                    variant=\"dark\"\r\n                    expand=\"lg\"\r\n                    collapseOnSelect\r\n                >\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand className=\"mb-n4 mt-n2\">\r\n                            <span className=\"ml-n3\">\r\n                                <svg height=\"20%\" width=\"20%\" viewBox=\"0 0 170 170\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m92.382 45.859v-.259a20.1 20.1 0 0 0 -20.1-20.1 20.1 20.1 0 0 0 -20.1 20.1v.265a26.282 26.282 0 0 1 -3.891 13.77 28.147 28.147 0 1 0 48.168.293 27.464 27.464 0 0 1 -4.077-14.069z\" fill=\"#20cb79\"/><path d=\"m83.7 56.177.092-.232a19.7 19.7 0 0 0 -11.092-25.545 19.7 19.7 0 0 0 -25.552 11.089l-.1.242a25.746 25.746 0 0 1 -8.5 11.15 27.576 27.576 0 1 0 43.8 17.585 26.9 26.9 0 0 1 1.352-14.289z\" fill=\"#9ee587\"/><path d=\"m55.126 95.5a20.58 20.58 0 0 1 -12.369-37.02 32.726 32.726 0 0 0 10.807-14.18l.095-.239a12.7 12.7 0 1 1 23.62 9.316l-.091.23a33.995 33.995 0 0 0 -1.747 18 20.584 20.584 0 0 1 -20.314 23.893z\" fill=\"#d7fb85\"/><circle cx=\"54.866\" cy=\"75.595\" fill=\"#b1705d\" r=\"13.031\"/><path d=\"m102.5 104.25h-77a1.75 1.75 0 0 1 0-3.5h77a1.75 1.75 0 0 1 0 3.5z\" fill=\"#19a966\"/><path d=\"m48.77 74.94a1.752 1.752 0 0 1 -1.628-2.393 8.316 8.316 0 0 1 10.772-4.677 1.75 1.75 0 0 1 -1.285 3.256 4.81 4.81 0 0 0 -6.229 2.706 1.751 1.751 0 0 1 -1.63 1.108z\" fill=\"#e2ebf0\"/></g></svg>\r\n                            </span>\r\n                            <span className=\"h3\" id=\"website-navbar-title\">Boutsacado</span>\r\n                        </Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        <SearchBox />\r\n\r\n                        <Nav className=\"ml-auto col-md-4 pt-3 text-right\" id=\"right-side-nav\">\r\n\r\n                            <LinkContainer to=\"/cart\" id=\"cart-link-container\">\r\n                                <Nav.Link className=\"ml-n2\">\r\n                                    <span className=\"h6\">\r\n                                        <i className=\"fas fa-shopping-cart\"></i>{' '}\r\n                                        <span className=\"fw-500\">CART</span>\r\n                                    </span>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            { userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown    title=\"Admin\"\r\n                                                className=\"h5\"\r\n                                                id=\"admin-dropdown-menu\"\r\n                                >\r\n                                    <LinkContainer to=\"/admin/userlist\">\r\n                                        <NavDropdown.Item>\r\n                                            <span className=\"h6\">\r\n                                                <i class=\"fas fa-users pr-1\"></i>{' '}\r\n                                                Users\r\n                                            </span>\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to=\"/admin/productlist\">\r\n                                        <NavDropdown.Item>\r\n                                            <span className=\"h6\">\r\n                                                <i class=\"fas fa-tags pr-1\"></i>{' '}\r\n                                                Products\r\n                                            </span>\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to=\"/admin/orderlist\">\r\n                                        <NavDropdown.Item>\r\n                                            <span className=\"h6\">\r\n                                                <i class=\"fas fa-hand-holding-usd pr-1\"></i>{' '}\r\n                                                Orders\r\n                                            </span>\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                            {/* [CASE] User is logged in. Show email/username. Don't show LOGIN. */}\r\n                            { userInfo ? (\r\n                                <NavDropdown \r\n                                    title={ usernameTruncate(userInfo.name, 12) }\r\n                                    className=\"h5\"\r\n                                    id=\"username-nav-dropdown\"\r\n                                >\r\n                                    <LinkContainer to=\"/profile\">\r\n                                        <NavDropdown.Item>\r\n                                            <span className=\"h6\">\r\n                                                <i class=\"fas fa-user-circle pr-1\"></i>{' '}\r\n                                                PROFILE\r\n                                            </span>\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item className=\"h6 mb-n1\" onClick={ logoutHandler }>\r\n                                        <span className=\"h6\">\r\n                                            <i class=\"fas fa-sign-out-alt pr-1\"></i>{' '}\r\n                                            LOGOUT\r\n                                        </span>\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link className=\"text-right font-weight-light ml-1\">\r\n                                        <span className=\"h6\">\r\n                                            <i className=\"fas fa-user\"></i>{' '}\r\n                                            LOGIN\r\n                                        </span>\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"text-right bg-white\">\r\n                <svg id=\"footer-avocado-icon\" viewBox=\"-125 0 432 280\"  xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m66.808594 8.859375c-14.324219 4.789063-24.03125 17.027344-26.304688 30.964844 10.191406 9.773437 25.308594 13.722656 39.632813 8.941406 14.320312-4.785156 24.035156-17.023437 26.304687-30.960937-10.1875-9.777344-25.308594-13.722657-39.632812-8.945313zm0 0\" fill=\"#adf2a2\"/><path d=\"m66.808594 8.859375-2.164063-6.476563c-16.808593 5.621094-28.226562 20-30.878906 36.339844-.359375 2.207032.398437 4.476563 2.015625 6.027344 8.519531 8.167969 19.949219 12.855469 31.933594 12.859375 4.839844.003906 9.761718-.765625 14.578125-2.371094l.007812-.003906c16.804688-5.613281 28.226563-19.996094 30.878907-36.335937.359374-2.207032-.398438-4.476563-2.011719-6.023438-8.519531-8.171875-19.949219-12.87109375-31.9375-12.875-4.832031-.00390625-9.761719.757812-14.597657 2.390625l.011719-.007813 2.164063 6.476563 2.179687 6.46875c3.402344-1.144531 6.839844-1.671875 10.242188-1.675781 8.394531-.003906 16.488281 3.316406 22.484375 9.074218l4.726562-4.921874-6.738281-1.101563c-1.890625 11.535156-9.894531 21.632813-21.726563 25.582031l.007813-.003906c-3.425781 1.136719-6.875 1.675781-10.269531 1.675781-8.398438.003907-16.488282-3.3125-22.484375-9.0625l-4.726563 4.929688 6.738282 1.097656c1.894531-11.535156 9.894531-21.636719 21.734374-25.585937l.011719-.007813zm0 0\" fill=\"#54596e\"/><path d=\"m201.488281 123.703125c0-40.457031-32.800781-73.261719-73.261719-73.261719-40.46875 0-73.269531 32.804688-73.269531 73.261719 0 60.519531-47.78125 122.390625-47.78125 181.117187 0 66.855469 54.191407 121.042969 121.050781 121.042969 66.851563 0 121.042969-54.1875 121.042969-121.042969 0-58.726562-47.78125-120.597656-47.78125-181.117187\" fill=\"#61c5a8\"/><path d=\"m201.488281 123.703125h6.828125c-.003906-44.230469-35.855468-80.09375-80.089844-80.09375-44.242187 0-80.09375 35.863281-80.097656 80.09375.054688 28.4375-11.429687 58.375-23.410156 88.730469-11.902344 30.378906-24.304688 61.144531-24.371094 92.386718.007813 70.628907 57.246094 127.867188 127.878906 127.875 70.625-.007812 127.863282-57.246093 127.871094-127.875-.066406-31.242187-12.46875-62.007812-24.363281-92.386718-11.988281-30.355469-23.472656-60.292969-23.417969-88.730469h-13.65625c.058594 32.085937 12.457032 63.34375 24.363282 93.726563 12.003906 30.382812 23.484374 59.910156 23.417968 87.390624 0 31.558594-12.769531 60.078126-33.449218 80.761719-20.691407 20.679688-49.207032 33.457031-80.765626 33.460938-31.5625-.007813-60.074218-12.78125-80.765624-33.460938-20.683594-20.683593-33.457032-49.203125-33.457032-80.761719-.066406-27.484374 11.425782-57.007812 23.417969-87.390624 11.90625-30.382813 24.304687-61.640626 24.363281-93.726563 0-18.371094 7.421875-34.9375 19.460938-46.980469 12.046875-12.039062 28.613281-19.453125 46.980468-19.460937 18.363282.007812 34.929688 7.425781 46.976563 19.460937 12.039063 12.046875 19.460937 28.613282 19.460937 46.980469z\" fill=\"#54596e\"/><path d=\"m128.226562 221.066406c-41.480468 0-75.09375 51.457032-75.09375 93.867188 0 42.417968 33.613282 76.800781 75.09375 76.800781 41.472657 0 75.085938-34.382813 75.085938-76.800781 0-42.410156-33.613281-93.867188-75.085938-93.867188\" fill=\"#5eaa99\"/><path d=\"m189.664062 302.988281c0-33.933593-27.507812-75.09375-61.441406-75.09375s-61.441406 41.160157-61.441406 75.09375c0 33.933594 27.507812 61.441407 61.441406 61.441407s61.441406-27.511719 61.441406-61.441407zm0 0\" fill=\"#bfad88\"/><path d=\"m189.664062 302.988281h6.824219c-.046875-18.804687-7.421875-38.699219-19.398437-54.421875-6.007813-7.847656-13.21875-14.652344-21.453125-19.574218-8.21875-4.914063-17.535157-7.925782-27.414063-7.925782-9.878906-.003906-19.195312 3.011719-27.414062 7.925782-12.347656 7.394531-22.40625 18.964843-29.535156 32.066406-7.101563 13.117187-11.300782 27.820312-11.316407 41.925781.003907 37.707031 30.558594 68.261719 68.265625 68.265625 37.707032-.003906 68.261719-30.558594 68.265625-68.265625h-13.652343c-.003907 15.101563-6.101563 28.714844-15.996094 38.617187-9.902344 9.894532-23.511719 15.992188-38.617188 15.996094-15.105468-.003906-28.714844-6.101562-38.617187-15.996094-9.894531-9.902343-15.992188-23.515624-15.996094-38.617187-.050781-15.132813 6.328125-32.78125 16.589844-46.125 5.109375-6.679687 11.140625-12.289063 17.609375-16.144531 6.480468-3.867188 13.328125-5.996094 20.414062-6 7.085938.003906 13.933594 2.132812 20.414063 6 9.707031 5.773437 18.410156 15.542968 24.53125 26.855468 6.148437 11.292969 9.683593 24.070313 9.667969 35.414063h6.828124zm0 0\" fill=\"#54596e\"/><path d=\"m128.222656 243.820312c-7.050781-.003906-13.671875 2.15625-19.441406 5.605469-8.671875 5.203125-15.601562 13.214844-20.523438 22.25-4.894531 9.046875-7.804687 19.171875-7.820312 29.039063 0 3.769531 3.058594 6.828125 6.828125 6.828125s6.824219-3.058594 6.824219-6.828125c-.046875-9.480469 4.039062-20.871094 10.59375-29.371094 3.257812-4.261719 7.082031-7.800781 11.097656-10.195312 4.03125-2.402344 8.183594-3.675782 12.445312-3.675782 3.769532 0 6.824219-3.058594 6.824219-6.824218 0-3.769532-3.054687-6.824219-6.824219-6.824219v-.003907zm0 0\" fill=\"#fff\"/><path d=\"m144.613281 9.441406s-13.667969 13.667969-13.667969 40.996094\" fill=\"#bfad88\"/><path d=\"m139.785156 4.613281c-.398437.402344-4.285156 4.375-8.113281 12.023438-3.824219 7.640625-7.558594 18.988281-7.550781 33.800781h13.652344c.003906-12.519531 3.105468-21.664062 6.113281-27.695312 1.503906-3.007813 2.988281-5.226563 4.054687-6.644532.527344-.707031.957032-1.21875 1.222656-1.523437l.277344-.308594zm0 0\" fill=\"#54596e\"/><path d=\"m134.59375 25.867188s-6.371094-6.371094-25.484375-6.371094\" fill=\"#adf2a2\"/><g fill=\"#54596e\"><path d=\"m139.421875 21.042969c-1.179687-1.273438-9.695313-8.445313-30.3125-8.375-3.769531 0-6.828125 3.054687-6.828125 6.828125 0 3.769531 3.058594 6.824218 6.828125 6.824218 8.800781 0 14.269531 1.460938 17.371094 2.699219 1.554687.621094 2.523437 1.191407 3.03125 1.53125l.429687.3125.011719.003907 2.324219-2.683594-2.511719 2.507812.1875.179688 2.324219-2.6875-2.511719 2.511718c2.664063 2.664063 6.984375 2.664063 9.652344.003907 2.664062-2.664063 2.667969-6.984375.003906-9.652344zm0 0\"/><path d=\"m88.109375 151.035156c8.980469 9.75 23.648437 15.359375 40.113281 15.414063 16.304688-.050781 30.839844-5.554688 39.84375-15.125 2.566406-2.765625 2.40625-7.082031-.355468-9.648438-2.765626-2.5625-7.082032-2.402343-9.644532.363281-5.4375 5.96875-16.707031 10.816407-29.84375 10.761719-13.265625.058594-24.628906-4.894531-30.011718-10.945312-2.535157-2.792969-6.855469-2.996094-9.644532-.460938-2.789062 2.535157-2.992187 6.851563-.457031 9.644531zm0 0\"/><path d=\"m94.089844 108.429688c0 5.652343-4.585938 10.238281-10.242188 10.238281-5.652344 0-10.238281-4.585938-10.238281-10.238281 0-5.65625 4.585937-10.242188 10.238281-10.242188 5.65625 0 10.242188 4.585938 10.242188 10.242188zm0 0\"/><path d=\"m182.835938 108.429688c0 5.652343-4.585938 10.238281-10.238282 10.238281-5.65625 0-10.242187-4.585938-10.242187-10.238281 0-5.65625 4.585937-10.242188 10.242187-10.242188 5.652344 0 10.238282 4.585938 10.238282 10.242188zm0 0\"/></g></svg>\r\n            </div>\r\n            \r\n            <footer className=\"border-top pt-2 bg-white\" >\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"text-center mb-3 mt-0 pt-2\">\r\n                            <div><strong>Copyright &copy; 2021 Boutsacado</strong></div> \r\n                            <div>Logo icon created by {' '}\r\n                                <a  href=\"https://www.flaticon.com/authors/darius-dan\"\r\n                                    className=\"text-primary font-weight-bold\"\r\n                                    title=\"Darius Dan\">Darius Dan</a> from {' '}\r\n                                <a  href=\"https://www.flaticon.com/\"\r\n                                    className=\"text-primary font-weight-bold\"\r\n                                    title=\"Flaticon\">flaticon.com</a>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\n\r\nfunction Rating({ value, text, color }) {\r\n\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} \r\n                    className={\r\n                        ( value >= 1 ) ? \r\n                            \"fas fa-star\" : ( value >= 0.5 ) ?\r\n                                \"fas fa-star-half-alt\" : \"far fa-star\"\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} \r\n                    className={\r\n                        ( value >= 2 ) ? \r\n                            \"fas fa-star\" : ( value >= 1.5 ) ?\r\n                                \"fas fa-star-half-alt\" : \"far fa-star\"\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} \r\n                    className={\r\n                        ( value >= 3 ) ?\r\n                            \"fas fa-star\" : ( value >= 2.5 ) ?\r\n                                \"fas fa-star-half-alt\" : \"far fa-star\"\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} \r\n                    className={\r\n                        ( value >= 4 ) ?\r\n                            \"fas fa-star\" : ( value >= 3.5 ) ?\r\n                                \"fas fa-star-half-alt\" : \"far fa-star\"\r\n                    }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} \r\n                    className={\r\n                        ( value >= 5 ) ?\r\n                            \"fas fa-star\" : ( value >= 4.5 ) ?\r\n                                \"fas fa-star-half-alt\" : \"far fa-star\"\r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            { text ? ( <span className=\"text-secondary\">\r\n                        {` (${ text }) `}\r\n                    </span> ) : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Product({ product }) {\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded shadow-sm product-card\">\r\n            <Link to={`/product/${ product._id }`}>\r\n                <Card.Img \r\n                    src={ product.image } \r\n                    className=\"rounded-3\"\r\n                />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={ `/product/${ product._id }` }>\r\n                    <Card.Title \r\n                        as=\"div\"\r\n                        className=\"custom-lime\"\r\n                        id=\"product-card-title\"\r\n                    >\r\n                        <strong>\r\n                            { product.name }\r\n                        </strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text>\r\n                    <div className=\"my-1\">\r\n                        <Rating value={ product.rating }\r\n                                text={ (product.numReviews === 1) ? ( `${product.numReviews} review`\r\n                                    ) : ( \r\n                                        `${product.numReviews} reviews`\r\n                                    )}\r\n                                color={ \"darkgreen\" } \r\n                        />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text className=\"price-space\" as=\"h3\">\r\n                    ${ product.price }\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nfunction Loader() {\r\n\r\n    return (\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            variant=\"success\"\r\n            style={{\r\n                height:'150px',\r\n                width:'150px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading . . . </span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction Message({variant, children}) {\r\n\r\n    return (\r\n        <Alert variant={variant} >\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nfunction Paginate({ pages, page, keyword='', isAdmin=false }) {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n\r\n    return ( pages > 1 && (\r\n            <Pagination>\r\n                { [...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer \r\n                        key={x + 1}\r\n                        to={ !isAdmin ? \r\n                            `/?keyword=${keyword}&page=${x + 1}` :\r\n                            `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item \r\n                            active={ x + 1 === page }\r\n                        > \r\n                            <span className=\"h6 p-2 fw-500\">{x + 1}</span>\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\n\r\nexport default Paginate;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\nfunction GrowingLoader() {\r\n\r\n    return (\r\n        <Spinner\r\n            animation=\"grow\"\r\n            role=\"status\"\r\n            variant=\"info\"\r\n            style={{\r\n                height:'150px',\r\n                width:'150px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading . . . </span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\n\r\nexport default GrowingLoader;\r\n","import axios from 'axios';\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_FEATURED_REQUEST,\r\n    PRODUCT_FEATURED_SUCCESS,\r\n    PRODUCT_FEATURED_FAIL,\r\n\r\n} from '../constants/productConstants';\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listFeaturedProducts = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_FEATURED_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/featured/`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_FEATURED_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_FEATURED_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: PRODUCT_DELETE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: PRODUCT_UPDATE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REVIEW_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport GrowingLoader from './GrowingLoader';\r\nimport Message from './Message';\r\nimport { listFeaturedProducts } from '../actions/productActions';\r\n\r\n\r\nfunction ProductCarousel() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productFeatured = useSelector( state => state.productFeatured )\r\n    const { error, loading, products } = productFeatured\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( listFeaturedProducts() )\r\n    }, [dispatch])\r\n\r\n\r\n    return  ( loading ? <GrowingLoader /> :\r\n                error ? <Message variant=\"danger\">{ error }</Message> :\r\n                (\r\n                    <Carousel\r\n                        pause=\"hover\"\r\n                        indicators={false}\r\n                        className=\"rounded-bottom mb-3\"\r\n                    >\r\n                        { products.map( (product) => (\r\n                            <Carousel.Item key={ product._id }>\r\n                                <Link to={`/product/${ product._id }`} >\r\n                                    <Image \r\n                                        src={ product.image }\r\n                                        alt={ product.name }\r\n                                        fluid\r\n                                    />\r\n                                    <Carousel.Caption className=\"carousel.caption\" >\r\n                                        <h4>{ product.name }</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                )\r\n    )\r\n}\r\n\r\n\r\nexport default ProductCarousel;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n\r\n    const productList = useSelector( state => state.productList )\r\n    const { \r\n        error,\r\n        loading,\r\n        products,\r\n        page,\r\n        pages,\r\n\r\n    } = productList\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => { \r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword] )\r\n\r\n\r\n    return (\r\n        <div>\r\n            { !keyword && <ProductCarousel /> }\r\n            \r\n            <h2 id=\"home-screen-latest-title\">\r\n                <ins>Latest Products</ins>\r\n            </h2>\r\n            { loading ? (  \r\n                <div>\r\n                    <br></br>\r\n                    <Loader />\r\n                </div>\r\n\r\n            ) : error ? ( \r\n                <div>\r\n                    <br></br>\r\n                    <Message variant=\"danger\">\r\n                        { error }\r\n                    </Message>\r\n                </div>\r\n\r\n            ) : ( \r\n                <div>\r\n                    <Row>\r\n                        { products.map( (product) => (\r\n                            <Col key={ product._id }\r\n                                sm={12} md={6} lg={4} xl={3}\r\n                            >\r\n                                <Product product={ product } />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <div className=\"d-flex flex-row justify-content-center mt-3\">\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector( state => state.productDetails )\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector( state => state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector( state => state.productReviewCreate )\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n\r\n    useEffect( () => {\r\n        // Reset Review Form: \r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        history.push( `/cart/${ match.params.id }?qty=${ qty }` )\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, { rating, comment }\r\n    ))}\r\n\r\n\r\n    const writeDate = (timestamp) => {\r\n        const time = timestamp.substring(0, 10)\r\n        const [yr, mo, day] = [ parseInt(time.substring(0, 4)),\r\n                                parseInt(time.substring(5,7)),\r\n                                parseInt(time.substring(8, 10)) ]\r\n        const options = { month: 'long', day: 'numeric', year: 'numeric' }\r\n        const date = new Date(yr, mo-1, day)\r\n        const localeString = date.toLocaleDateString('en-US', options)\r\n        return localeString\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-sm btn-dark mt-2 mb-4\">Go Back</Link>\r\n\r\n            { loading ? <Loader /> :\r\n                error ? ( <Message variant=\"danger\">{ error }</Message>\r\n            ) : ( \r\n                <div>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image  src={ product.image }\r\n                                    alt={ product.name }\r\n                                    fluid \r\n                            />\r\n                        </Col>\r\n\r\n                        <Col md={3}>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3 class=\"fw-bold\">{ product.name }</h3>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Rating value={ product.rating }\r\n                                            text={ `${ product.numReviews }` }\r\n                                            color={ \"darkgreen\" }\r\n                                    />\r\n                        \r\n                                </ListGroup.Item>\r\n\r\n\r\n                                <ListGroup.Item>\r\n                                    <p className=\"mt-2\">\r\n                                        { product.description }\r\n                                    </p>\r\n\r\n                                    <span class=\"badge bg-secondary px-3 py-2 category-tag\">\r\n                                        { product.category }\r\n                                    </span>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>${ product.price }</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                { (product.countInStock > 0) ? \r\n                                                    \"In Stock\" : \"Out of Stock\"\r\n                                                }\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* Custom Quantity Dropdown based on number of items in the stores inventory */}\r\n                                    { (product.countInStock > 0) && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Quantity:</Col>\r\n                                                <Col xs=\"auto\" className=\"my-1\">\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        className=\"mr-4 pr-4\"\r\n                                                        value={ qty }\r\n                                                        onChange={ (e) => setQty(e.target.value) }\r\n                                                    >\r\n                                                        {\r\n                                                            [...Array(product.countInStock).keys()].map( (x) => (\r\n                                                                <option key={ x + 1 }  value={ x + 1 }>\r\n                                                                    { x + 1 }\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button className={ `btn-block btn-lg\r\n                                                            ${ (product.countInStock === 0) ?\r\n                                                                \"btn-secondary\" : \"btn-info\" }`\r\n                                                        }\r\n                                                disabled={ product.countInStock === 0 }\r\n                                                type=\"button\"\r\n                                                onClick={ addToCartHandler }\r\n                                        >\r\n                                            <span className=\"h6 fw-500\">ADD TO CART</span>\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n\r\n                            { product.featured && (\r\n                                <div className=\"px-2 py-3 m-3 bg-success text-center text-dark h5 rounded border border-dark\">\r\n                                     <i class=\"fas fa-trophy\"></i>\r\n                                    <strong> Featured Product!</strong>\r\n                                </div>\r\n                            )}\r\n\r\n                            { userInfo && userInfo.isAdmin && (\r\n                                <div className=\"text-center mt-4\">\r\n                                    <a  href={`#/admin/product/${ product._id }/edit`}\r\n                                        className=\"px-2 py-1 m-3 text-primary\">\r\n                                        <Button variant=\"outline-primary\">\r\n                                            <i className=\"fas fa-edit\" style={{ fontSize: \"1.2em\" }}></i>\r\n                                            <strong className=\"pl-1\"> Edit Product</strong>\r\n                                        </Button>\r\n                                    </a>\r\n                                </div>\r\n                            )}\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h4 className=\"mt-4 ml-2\"><ins>Reviews</ins></h4>\r\n\r\n                            { (product.reviews.length === 0) && \r\n                                ( <Message variant='light'>No Reviews</Message> )\r\n                            }\r\n\r\n                            <ListGroup variant=\"flush\">\r\n                                { product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{ review.name }</strong>\r\n                                        <Rating value={ review.rating }\r\n                                                color=\"#B55B00\"\r\n                                                text={ writeDate(review.createdAt) }\r\n                                        />\r\n                                        \r\n                                        <p className=\"px-1 mt-3\">{ review.comment }</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n\r\n                                <h4 className=\"mt-4 ml-2\">Write a Review</h4>\r\n                                \r\n                                { loadingProductReview && <Loader /> }\r\n                                { successProductReview && <Message variant=\"success\">Review Submitted</Message> }\r\n                                { errorProductReview && <Message variant=\"danger\">{ errorProductReview }</Message> }\r\n\r\n                                    <ListGroup.Item>\r\n                                        { userInfo ? (\r\n                                            <Form onSubmit={ submitHandler }>\r\n                                                <Form.Group className=\"d-flex\">\r\n                                                    <Form.Label className=\"mr-3 mt-2\">Rating:</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        value={ rating }\r\n                                                        className=\"w-50\"\r\n                                                        size=\"text\"\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId=\"comment\">\r\n                                                    <Form.Label className=\"mr-3 mt-2\">Review:</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as=\"textarea\"\r\n                                                        rows={4}\r\n                                                        value={ comment }\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    ></Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disabled={ loadingProductReview }\r\n                                                    type=\"submit\"\r\n                                                    variant=\"primary\"\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Message variant='dark'>\r\n                                                Please <Link to=\"/login\" >log in</Link> to write a review.\r\n                                            </Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n} from '../constants/cartConstants';\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch ({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', \r\n                         JSON.stringify( getState().cart.cartItems )\r\n    )\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n\r\n    dispatch ({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems',\r\n                         JSON.stringify( getState().cart.cartItems )\r\n    )\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch ({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify( data ))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch ({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify( data ))\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';   \r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector( state => state.cart )\r\n    const { cartItems } = cart\r\n\r\n    useEffect( () => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty] )\r\n\r\n    const continueShoppingHandler = () => {\r\n        // Redirect to home page:\r\n        history.push('/')\r\n    }\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        // Redirect to shipping page:\r\n        history.push(\"/login?redirect=shipping\")\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h2 className=\"mt-2\" id=\"shopping-cart-title\">Shopping Cart</h2>\r\n                <br></br>\r\n\r\n                { (cartItems.length === 0) ? \r\n                    (\r\n                        <Message variant=\"primary\">\r\n                            Your cart is empty.\r\n                            <Link to=\"/\"  className=\"pl-2\">\r\n                                Continue browsing\r\n                            </Link>\r\n                        </Message>\r\n                )\r\n                : (\r\n                    <ListGroup variant=\"flush\">\r\n                        { cartItems.map((item) => (\r\n                            <ListGroup.Item key={ item.product }>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image  \r\n                                            src={ item.image }\r\n                                            alt={ item.name }\r\n                                            fluid\r\n                                            rounded\r\n                                        />\r\n                                    </Col>\r\n\r\n                                    <Col md={4}>\r\n                                        <Link to={ `/product/${item.product}` }  className=\"product-title custom-lime\">\r\n                                            { item.name }\r\n                                        </Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${ item.price }\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            value={ item.qty }\r\n                                            onChange={ (e) => dispatch(\r\n                                                addToCart(item.product, Number(e.target.value))\r\n                                            )}\r\n                                        >\r\n                                            {   [...Array(item.countInStock).keys()].map( (x) => (\r\n                                                    <option key={ x + 1 }  value={ x + 1 }>\r\n                                                        { x + 1 }\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button \r\n                                            type=\"button\"\r\n                                            variant=\"outline-secondary\"\r\n                                            onClick={ () => removeFromCartHandler(item.product) }\r\n                                        >\r\n                                            <i className=\"fas fa-trash\"></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n\r\n                        <ListGroup.Item>\r\n                            <Row className=\"mt-2\">\r\n                                <Col md={6}>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"outline-primary\"\r\n                                        class=\"btn btn-outline-primary px-3 py-2\"\r\n                                        onClick={ continueShoppingHandler }\r\n                                    >\r\n                                        <span id=\"continue-shopping-btn\">\r\n                                            <strong>Continue Shopping</strong>\r\n                                        </span>\r\n                                    </Button>\r\n                                </Col>\r\n\r\n                                <Col md={5}> </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card className=\"mt-3\">\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>\r\n                                Subtotal: {' '}\r\n                                { cartItems.reduce(\r\n                                    (acc, item) =>  acc + item.qty, 0 )\r\n                                }\r\n                                {' '} Item(s)\r\n                            </h3>\r\n                            <h4 className=\"mt-3 pl-1\">\r\n                                <strong>\r\n                                ${ cartItems.reduce(\r\n                                    (acc, item) =>  acc + item.qty * item.price, 0 ).toFixed(2)\r\n                                }\r\n                                </strong>\r\n                            </h4>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"info\"\r\n                                className=\"btn-block btn-info btn-lg\"\r\n                                disabled={ cartItems.length === 0 }\r\n                                onClick={ checkoutHandler }\r\n                            >\r\n                                <span className=\"h6\">\r\n                                    <strong>Proceed To Checkout</strong>\r\n                                </span>\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    { children }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect( () => {\r\n        // [CASE] User's already logged in:\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch( login(email, password) )\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h2 className=\"mt-2\" id=\"login-title\">Sign In</h2>\r\n            <br></br>\r\n\r\n            {/* Handle ERROR MESSAGE and LOADER animation */}\r\n            { error && <Message variant=\"danger\">{ error }</Message> }\r\n            { loading && <Loader /> }\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"boutsacado@mockup.com\"\r\n                        value={ email }\r\n                        onChange={ (e) => setEmail(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"secrets . . .\"\r\n                        value={ password }\r\n                        onChange={ (e) => setPassword(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Row>\r\n                    <Button \r\n                        type=\"submit\"\r\n                        variant=\"info\"\r\n                        className=\"btn btn-info ml-3 mt-2 px-3\"\r\n                        id=\"login-button\"\r\n                    >\r\n                        <span className=\"h6\">\r\n                            <strong>Login</strong>\r\n                        </span>\r\n                    </Button>\r\n\r\n                    <Col className=\"text-right pt-3 mr-3\">\r\n                        New around these parts? \r\n                        <Link \r\n                            className=\"text-success pl-1\"\r\n                            to={ redirect ? `/register?redirect=${redirect}` :\r\n                                            \"/register\" }>\r\n                            <ins><strong>Register!</strong></ins>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect( () => {\r\n        // [CASE] User's already logged in:\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase())\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password.length < 8) {\r\n            setMessage(\"Password must contain at least 8 characters.\")\r\n        }\r\n        // [CASE] Passwords DON'T match:\r\n        else if(password !== confirmPassword) {\r\n            setMessage(\"Passwords do not match!\")\r\n        }\r\n        // [CASE] Passwords match:\r\n        else {\r\n            dispatch( register(name, email, password) )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h2 className=\"mt-2\" id=\"login-title\">Create an Account</h2>\r\n            <br></br>\r\n            {/* Handle Password Confirmation Message */}\r\n            { message && <Message variant=\"danger\">{ message }</Message>}\r\n\r\n            {/* Handle ERROR MESSAGE and LOADER animation */}\r\n            { error && <Message variant=\"danger\">{ error }</Message> }\r\n            { loading && <Loader /> }\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"name\"\r\n                        placeholder=\"Enter Name\"\r\n                        className={ name ? (\r\n                            name.length >= 2 ?\r\n                                \"is-valid\" : \"is-invalid\") : \"\" }\r\n                        value={ name }\r\n                        onChange={ (e) => setName(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"email\"\r\n                        placeholder=\"Enter Email\"\r\n                        className={ email ? (\r\n                                        validateEmail(email) ?\r\n                                            \"is-valid\" : \"is-invalid\") : \"\" }\r\n                        value={ email }\r\n                        onChange={ (e) => setEmail(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Must provide a valid email address.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        className={ password ? (\r\n                                        password.length >= 8 ?\r\n                                            \"is-valid\" : \"is-invalid\") : \"\" }\r\n                        value={ password }\r\n                        onChange={ (e) => setPassword(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Required: Must be at least 8 characters long.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"passwordConfirm\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        className={ (confirmPassword.length >= 8) ? (\r\n                                        password === confirmPassword ? \r\n                                            \"is-valid\" : \"is-invalid\") : \"\" }\r\n                        value={ confirmPassword }\r\n                        onChange={ (e) => setConfirmPassword(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Required: Must match password field.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Row>\r\n                    <Button \r\n                        type=\"submit\"\r\n                        variant=\"info\"\r\n                        className=\"btn btn-info ml-4 mt-2 px-3\"\r\n                        id=\"register-button\"\r\n                    >\r\n                        <span className=\"h6 font-weight-bold\">Register</span>\r\n                    </Button>\r\n\r\n                    <Col className=\"text-right pt-3 mr-3\">\r\n                        Already a member? \r\n                        <Link \r\n                            className=\"text-success pl-1\"\r\n                            to={ redirect ? `/login?redirect=${redirect}` :\r\n                                            \"/login\" }>\r\n                            <ins><strong>Sign in!</strong></ins>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Alert, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [alertVariant, setAlertVariant] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n    useEffect( () => {\r\n        // [CASE] User's NOT logged in:\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        // [CASE] User's logged in:\r\n        else {\r\n            // [CASE] We have no user info loaded OR \r\n            //          we're viewing details of a different user's account:\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch( getUserDetails('profile') )\r\n                dispatch( listMyOrders() )\r\n            }\r\n            // [CASE] User's info is already loaded:\r\n            else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase())\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // [CASE] Password Doesn't Meet Length Requirement:\r\n        if(password && password.length < 8) {\r\n            setAlertVariant(\"danger\")\r\n            setMessage(\"Password must contain at least 8 characters!\")\r\n        }\r\n        // [CASE] Passwords DON'T match:\r\n        else if(password !== confirmPassword) {\r\n            setAlertVariant(\"danger\")\r\n            setMessage(\"Passwords do not match!\")\r\n        }\r\n        // [CASE] Passwords match:\r\n        else {\r\n            dispatch( updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n            setAlertVariant(\"success\")\r\n            setMessage(\"Profile Updated\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={4}>\r\n                <h2 id=\"user-profile-title\">\r\n                    <ins>User Profile</ins>\r\n                </h2>\r\n\r\n                {/* Handle Password Confirmation Message & Successful Profile Updates*/}\r\n                { message && alertVariant === 'danger' && \r\n                    <Alert variant={ alertVariant } onClose={() => setMessage('')} dismissible>{ message }</Alert>\r\n                }\r\n\r\n                {/* Handle ERROR MESSAGE and LOADER animation */}\r\n                { error && <Message variant=\"danger\">{ error }</Message> }\r\n                { loading && <Loader /> }\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            className={ name ? (\r\n                                (name.length >= 2) ?\r\n                                    \"is-valid\" : \"is-invalid\") : \"\" }\r\n                            value={ name }\r\n                            onChange={ (e) => setName(e.target.value) }\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            className={ email ? (\r\n                                            validateEmail(email) ?\r\n                                                \"is-valid\" : \"is-invalid\") : \"\" }\r\n                            value={ email }\r\n                            onChange={ (e) => setEmail(e.target.value) }\r\n                        >\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Must provide a valid email address.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            className={ password ? (\r\n                                            (password.length >= 8) ?\r\n                                                \"is-valid\" : \"is-invalid\") : \"\" }\r\n                            value={ password }\r\n                            onChange={ (e) => setPassword(e.target.value) }\r\n                        >\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Required: Must be at least 8 characters long.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"passwordConfirm\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            className={ (confirmPassword.length >= 8) ? (\r\n                                            (password === confirmPassword) ? \r\n                                                \"is-valid\" : \"is-invalid\") : \"\" }\r\n                            value={ confirmPassword }\r\n                            onChange={ (e) => setConfirmPassword(e.target.value) }\r\n                        >\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Required: Must match password field.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Row>\r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"outline-dark\"\r\n                            className=\"btn ml-3 mt-3 mb-5 px-4\"\r\n                            id=\"update-btn\"\r\n                        >\r\n                            <span className=\"h6\">\r\n                                <strong>Update</strong>\r\n                            </span>\r\n                        </Button>\r\n                    </Row>\r\n                </Form>\r\n                <Row></Row>\r\n                { message && alertVariant === 'success' && \r\n                    <Alert variant={ alertVariant } onClose={() => setMessage('')} dismissible>{ message }</Alert>\r\n                }\r\n            </Col>\r\n\r\n            <Col md={1}></Col>\r\n\r\n            <Col md={7}>\r\n                <h2 id=\"my-orders-title\">\r\n                    <ins>My Orders</ins>\r\n                </h2>\r\n\r\n                { loadingOrders ? ( <Loader /> ) : \r\n                    errorOrders ? (\r\n                        <Message variant=\"danger\">{ errorOrders }</Message>\r\n                    ) : (\r\n                        <Table striped responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { orders.map( order => (\r\n                                    <tr key={ order._id } >\r\n                                        <td className=\"pt-2 pl-2\">{ order._id }</td>\r\n                                        <td className=\"pt-2\">{ order.createdAt.substring(0, 10) }</td>\r\n                                        <td className=\"pt-2\">${ order.totalPrice }</td>\r\n                                        <td className=\"pt-2\">{ order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                            <i  className=\"fas fa-times pl-2\" style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n                                        <td className=\"pt-2\">\r\n                                            { order.isDelivered ? order.deliveredAt.substring(0, 10) :\r\n                                                <em className=\"text-muted\">Not Delivered</em>\r\n                                            }\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className=\"btn-sm\" variant=\"outline-dark\">\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileScreen;\r\n\r\n","import axios from 'axios';\r\nimport {  \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n\r\n} from '../constants/orderConstants';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: ORDER_CREATE_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/orders/add/',\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({ \r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem(\"cartItems\")\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: ORDER_CREATE_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: ORDER_DETAILS_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: ORDER_PAY_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: ORDER_PAY_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: ORDER_LIST_MY_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/orders/myorders/',\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: ORDER_LIST_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/orders/',\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: ORDER_LIST_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({ \r\n            type: ORDER_DELIVER_REQUEST, \r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = { \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({ \r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({ \r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: (error.response && error.response.data.detail) ?\r\n                error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav \r\n            className=\"justify-content-around font-weight-bold mb-4\"\r\n            id=\"checkout-steps\"\r\n        >\r\n            <Nav.Item>\r\n                { step1 ? (\r\n                    <LinkContainer to=\"/login\">\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>\r\n                        Login\r\n                    </Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                { step2 ? (\r\n                    <LinkContainer to=\"/shipping\">\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>\r\n                        Shipping\r\n                    </Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                { step3 ? (\r\n                    <LinkContainer to=\"/payment\">\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>\r\n                        Payment\r\n                    </Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                { step4 ? (\r\n                    <LinkContainer to=\"/placeorder\">\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>\r\n                        Place Order\r\n                    </Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState, /*useEffect*/ } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n    const cart = useSelector( state => state.cart )\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch( saveShippingAddress({address, city, postalCode, country}) )\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <CheckoutSteps step1 step2 />\r\n\r\n            <h2 id=\"shipping-screen-title\">Shipping</h2>\r\n            <Form onSubmit={ submitHandler }>\r\n\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"123 Mulberry Street\"\r\n                        value={ address ? address : '' }\r\n                        onChange={ (e) => setAddress(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Orlando, FL\"\r\n                        value={ city ? city : '' }\r\n                        onChange={ (e) => setCity(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"32819\"\r\n                        value={ postalCode ? postalCode : '' }\r\n                        onChange={ (e) => setPostalCode(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"United States\"\r\n                        value={ country ? country : '' }\r\n                        onChange={ (e) => setCountry(e.target.value) }\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='info'\r\n                    className=\"mt-1 btn-info btn-lg\"\r\n                >\r\n                    <span className=\"h6 font-weight-bold\">Continue</span>\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, /*useEffect*/ } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\n\r\nfunction PaymentScreen({ history }) {\r\n    const cart = useSelector( state => state.cart )\r\n    const { shippingAddress } = cart\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Redirect the user if they don't have their shipping information:\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch( savePaymentMethod(paymentMethod) )\r\n        history.push('/placeorder')\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <h2 id=\"payment-screen-title\"\r\n                className=\"mb-4\"\r\n            >\r\n                Payment Method\r\n            </h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label className=\"mb-3\">\r\n                        <h5><ins>Select Method</ins>:</h5>\r\n                    </Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Paypal or Credit Card\"\r\n                            id=\"paypal\"\r\n                            name=\"paymentMethod\"\r\n                            checked\r\n                            onChange={ (e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='info'\r\n                    className=\"mt-3 btn-info btn-lg\"\r\n                >\r\n                    <span className=\"h6 font-weight-bold\">Continue</span>\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default PaymentScreen;\r\n","import React, { /*useState,*/ useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector( state => state.orderCreate )\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector( state => state.cart )\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce( \r\n        (acc, item) => acc + (item.price * item.qty), 0 ).toFixed(2)\r\n    \r\n    // Orders over $100 ship free. Orders under have $10 flat rate shipping.\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n\r\n    // Tax rate will vary, however Ohio sales tax is 5.75%.\r\n    cart.taxPrice = Number((0.0575) * cart.itemsPrice).toFixed(2)\r\n\r\n    // Order Totol:\r\n    cart.totalPrice = ( Number(cart.itemsPrice) +\r\n                        Number(cart.shippingPrice) +\r\n                        Number(cart.taxPrice) ).toFixed(2)\r\n\r\n    // Handle Missing Payment Method:\r\n    if(!cart.paymentMethod && !localStorage.getItem(\"paymentMethod\")) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [dispatch, success, history, order])\r\n\r\n    const placeOrder = () => {\r\n        dispatch( \r\n            createOrder({\r\n                orderItems:       cart.cartItems,\r\n                shippingAddress:  cart.shippingAddress,\r\n                paymentMethod:    cart.paymentMethod,\r\n                itemsPrice:       cart.itemsPrice,\r\n                shippingPrice:    cart.shippingPrice,\r\n                taxPrice:         cart.taxPrice,\r\n                totalPrice:       cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <h2 id=\"placeorder-screen-title\">Place Order</h2>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3 className=\"pb-2\"><ins>Shipping</ins></h3>\r\n                            <p>\r\n                                <strong>Shipping Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"pt-4\">\r\n                            <h3 className=\"pb-2\"><ins>Payment Method</ins></h3>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod ||\r\n                                 localStorage.getItem(\"paymentMethod\").replace(/\"/gi, '')}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item className=\"pt-4\">\r\n                            <h3 className=\"pb-2\"><ins>Order Items</ins></h3>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message variant=\"secondary\">\r\n                                    Your cart is empty\r\n                                </Message>\r\n                            ) : (\r\n                                <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map( (item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid rounded\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                                <Col className=\"pt-3\">\r\n                                                    <Link \r\n                                                        to={`/product/${item.product}`}\r\n                                                        className=\"custom-lime\">\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4} className=\"pt-3\">\r\n                                                    ${item.price} x {item.qty} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h2 id=\"order-summary-title\">\r\n                                    Order Summary\r\n                                </h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item(s):</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>{ (cart.shippingPrice > 0) ?\r\n                                            '$'+ cart.shippingPrice : (\r\n                                                <span   className=\"custom-lime\">\r\n                                                    <strong>FREE</strong>\r\n                                                </span>\r\n                                        )}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className={ error ? \"\" : \"invisible\" }>\r\n                                { error && <Message variant=\"danger\">{ error }</Message> }\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"m-2\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"btn-block btn-success btn-lg\"\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    <span className=\"h6 font-weight-bold\">\r\n                                        Place Order\r\n                                    </span>\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nfunction OrderScreen({ history, match }) {\r\n\r\n    const orderId= match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector( state => state.orderDetails )\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector( state => state.orderPay )\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector( state => state.orderDeliver )\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector( state => state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    // [CASE] NOT loading and NOT error:\r\n    if(!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce( \r\n            (acc, item) => acc + (item.price * item.qty), 0 ).toFixed(2)\r\n    }\r\n\r\n    // Adds the PayPal script necessary to integrate the PayPal button.\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = \"https://www.paypal.com/sdk/js?client-id=AZmhBuAaXSjA7ufZ56cb19aAvmcMBlgm71bQ05-JmP0V-39A4bn-S0GyI4RlIwxiaP9jqryTks-BTra7\"\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    const formatTimestamp = (timestamp) => {\r\n        const date = timestamp.substring(0, 10)\r\n        const [year, month, day] = [date.substring(0, 4), date.substring(5,7), date.substring(8, 10)]\r\n        const dateFormatted = `${month}-${day}-${year}`\r\n        const time = timestamp.substring(11, 19)\r\n        const hours = Number(time.substring(0,2))\r\n        const hoursFormatted = (hours > 12) ? hours - 12 : hours\r\n        const timeFormatted = `${hoursFormatted}${time.substring(2)}`\r\n        return `${dateFormatted} @ ${timeFormatted} ${ (hours > 12) ? 'PM' : 'AM'} (UTC)`\r\n    }\r\n\r\n\r\n    useEffect( () => {\r\n        // [CASE] User is NOT logged in:\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        // [CASE] No order OR order id does not match:\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch( getOrderDetails(orderId) )\r\n        } \r\n        else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, history, order, orderId, successPay, successDeliver, userInfo])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        // Confirmation Message:\r\n        if (window.confirm(\"Are you sure you want to mark this order as delivered?\")) {\r\n            dispatch( deliverOrder(order) )\r\n        }\r\n    }\r\n\r\n    const zeroPadding = (num) => ('00000'+num).slice(-5)\r\n\r\n\r\n    return  loading ? (\r\n        <Loader />\r\n    ) : \r\n    error ? (\r\n        <Message variant=\"danger\">{ error }</Message>\r\n    ) : \r\n    (\r\n        <div>\r\n            <h2 id=\"ordersummary-screen-title\">Order Invoice [#{ zeroPadding(orderId) }]</h2>\r\n\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h3 className=\"pb-2\">\r\n                                    <ins>Shipping</ins>\r\n                                </h3>\r\n                                <p><strong>Name: </strong> \r\n                                    <span className=\"text-secondary\">\r\n                                    {order.user.name}\r\n                                    </span>\r\n                                </p>\r\n                                <p><strong>Email: </strong> \r\n                                    <a  className=\"text-secondary\"\r\n                                        href={`mailto:${order.user.email}`}>\r\n                                        {order.user.email}\r\n                                    </a>\r\n                                </p>\r\n\r\n                                <p><strong>Shipping Address: </strong>\r\n                                    <span className=\"text-secondary\">\r\n                                        {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                        {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </span>\r\n                                    <p></p>\r\n                                    { order.isDelivered ? (\r\n                                            <Message variant=\"success\"><strong>Delivered</strong> on { formatTimestamp(order.deliveredAt) }</Message>\r\n                                    ) : (\r\n                                            <Message variant=\"secondary\"><strong>Not Delivered</strong></Message>\r\n                                    )}\r\n                                </p>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"pt-4\">\r\n                                <h3 className=\"pb-2\"><ins>Payment Method</ins></h3>\r\n                                <p><strong>Method: </strong> \r\n                                    <span className=\"text-secondary font-weight-bold\">\r\n                                        {order.paymentMethod ||\r\n                                            localStorage.getItem(\"paymentMethod\").replace(/\"/gi, '')}\r\n                                    </span>\r\n                                </p>\r\n                                { order.isPaid ? (\r\n                                        <Message variant=\"success\"><strong>Paid</strong> on { formatTimestamp(order.paidAt) }</Message>\r\n                                ) : (\r\n                                        <Message variant=\"warning\"><strong>Not Paid</strong></Message>\r\n                                )}\r\n                                <p>\r\n\r\n                                </p>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"pt-4\">\r\n                                <h3 className=\"pb-2\"><ins>Order Items</ins></h3>\r\n                                {order.orderItems.length === 0 ? (\r\n                                    <Message variant=\"secondary\">\r\n                                        Order is empty\r\n                                    </Message>\r\n                                ) : (\r\n                                    <ListGroup variant=\"flush\">\r\n                                        {order.orderItems.map( (item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={2}>\r\n                                                        <Image\r\n                                                            src={item.image}\r\n                                                            alt={item.name}\r\n                                                            fluid rounded\r\n                                                        />\r\n                                                    </Col>\r\n\r\n                                                    <Col className=\"pt-3\">\r\n                                                        <Link \r\n                                                            to={`/product/${item.product}`}\r\n                                                            className=\"custom-lime\">\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4} className=\"pt-3\">\r\n                                                        ${item.price} x {item.qty} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2 id=\"order-summary-title\">\r\n                                        Order Summary\r\n                                    </h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Item(s):</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping:</Col>\r\n                                        <Col>{ (order.shippingPrice > 0) ?\r\n                                                '$'+ order.shippingPrice : (\r\n                                                    <span className=\"custom-lime\">\r\n                                                        <strong>FREE</strong>\r\n                                                    </span>\r\n                                            )}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax:</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total:</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                \r\n                                { !order.isPaid && (\r\n                                    <ListGroup.Item className=\"mt-3\">\r\n                                        { loadingPay && <Loader /> }\r\n\r\n                                        { !sdkReady ? (\r\n                                            <Loader />\r\n                                        ) : (   \r\n                                                <PayPalButton \r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                            </ListGroup>\r\n\r\n                            { loadingDeliver && <Loader/> }\r\n\r\n                            { userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"warning\"\r\n                                        className=\"btn btn-block py-3\"\r\n                                        onClick={ deliverHandler }\r\n                                    >\r\n                                        <span className=\"h5\" style={{ fontWeight: \"500\" }}>\r\n                                            Mark as Delivered{' '}\r\n                                            <i class=\"fas fa-shipping-fast\"></i>\r\n                                        </span>\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector( state => state.orderList )\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect( () => {\r\n        // [CASE] User is Admin:\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch( listOrders() )\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    const formatTimestamp = (timestamp) => {\r\n        const date = timestamp.substring(0, 10)\r\n        const [year, month, day] = [date.substring(0, 4), date.substring(5,7), date.substring(8, 10)]\r\n        const dateFormatted = `${month}-${day}-${year}`\r\n        const time = timestamp.substring(11, 19)\r\n        const hours = Number(time.substring(0,2))\r\n        const hoursFormatted = (hours > 12) ? hours - 12 : hours\r\n        const timeFormatted = `${hoursFormatted}${time.substring(2)}`\r\n        return `${dateFormatted} @ ${timeFormatted} ${ (hours > 12) ? 'PM' : 'AM'} (UTC)`\r\n    }\r\n\r\n    const zeroPadding = (num) => ('00000'+num).slice(-5)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"my-4 fw-500\">Orders</h1>\r\n\r\n            { loading ? ( <Loader /> ) :\r\n                error ? ( <Message variant='danger'>{ error }</Message> ) \r\n                    : (\r\n                        <Table  striped bordered hover responsive\r\n                                className=\"table-sm\"\r\n                        >\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th className=\"pl-2\">NO.</th>\r\n                                    <th className=\"pl-2\">USER</th>\r\n                                    <th className=\"pl-2\">DATE</th>\r\n                                    <th className=\"pl-2\">TOTAL</th>\r\n                                    <th className=\"text-center\">PAID</th>\r\n                                    <th className=\"text-center\">DELIVERED</th>\r\n                                    {/* <th className=\"m-0 p-0\"></th> */}\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { orders.map( order => (\r\n                                    <tr key={ order._id }>\r\n                                        <td className=\"pt-3 pl-2 fw-500 custom-lime\">\r\n                                            <a \r\n                                                href={`#/order/${ order._id }`}\r\n                                                className=\"custom-lime pl-0\"\r\n                                                target=\"_blank\" rel=\"noreferrer\"\r\n                                            >\r\n                                                { zeroPadding( order._id ) }\r\n                                            </a>\r\n                                        </td>\r\n                                        <td className=\"pt-3 pl-2\">{ order.user && order.user.name }</td>\r\n                                        <td className=\"pt-3 pl-2\">{ formatTimestamp(order.createdAt) }</td>\r\n                                        <td className=\"pt-3 pl-2\">${ order.totalPrice }</td>\r\n                                        <td className=\"h4 pt-2 px-4 text-center\">{ order.isPaid ? (\r\n                                            <i className=\"fas fa-handshake\" style={{ color: \"#00CC00\" }}></i>\r\n                                        ) : (\r\n                                            <i className=\"fas fa-handshake-slash\" style={{ color: \"#C1121F\" }}></i>\r\n                                        )}\r\n                                        </td>\r\n\r\n                                        <td className=\"h4 pt-2 text-center\">{ order.isDelivered ? (\r\n                                            <i className=\"fas fa-box\" style={{ color: \"#008000\" }}></i>\r\n                                        ) : (\r\n                                            <i className=\"fas fa-box-open\" style={{ color: \"#995609\" }}></i>\r\n                                        )}\r\n                                        </td>\r\n                                    {/*\r\n                                        <td className=\"mx-0 text-center\">\r\n                                            <LinkContainer to={`/order/${ order._id }`}>\r\n                                                <Button variant=\"outline-dark\"\r\n                                                        className=\"btn-sm mx-2 px-3\">\r\n                                                    <strong>Details</strong>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    */}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default OrderListScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector( state => state.userList )\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector( state => state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector( state => state.userDelete )\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect( () => {\r\n        // [CASE] User is Admin:\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        // Confirmation Message:\r\n        if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n            dispatch( deleteUser(id) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"my-4 fw-500\">Users</h1>\r\n\r\n            { loading ? ( <Loader /> ) :\r\n                error ? ( <Message variant='danger'>{ error }</Message> ) \r\n                    : (\r\n                        <Table  striped bordered hover responsive\r\n                                className=\"table-sm\"\r\n                        >\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                {/* <th className=\"pl-2\">ID</th>   */}\r\n                                    <th className=\"pl-2\">EMAIL</th>\r\n                                    <th className=\"pl-2\">NAME</th>\r\n                                {/*     <th className=\"px-0 text-center\">ADMIN</th> */}\r\n                                    <th className=\"m-0 p-0\"></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                { users.map( user => (\r\n                                    <tr key={ user._id }>\r\n                                    {/* <td className=\"pt-3 pl-2\">{ user._id }</td>  */}\r\n                                        <td className=\"pt-3 pl-2\">\r\n                                            <a\r\n                                                href={`#/admin/user/${ user._id }/edit`}\r\n                                                className=\"text-info fw-500\"\r\n                                            >\r\n                                                { user.email }\r\n                                            </a>\r\n                                        </td>\r\n                                        <td className=\"pt-3 pl-2\">\r\n                                            { user.isAdmin ? (\r\n                                                <i class=\"fas fa-crown\" style={{ fontSize: \"1.15em\", color: \"#ebd702\", paddingRight: \"5px\"}}></i>\r\n                                            ) : (\r\n                                                <i class=\"fas fa-chess-pawn\" style={{ fontSize: \"1.15em\", color: \"#a1a1a1\", padding: \"0 7px 0 4px\" }}></i>\r\n                                            )} {' '}\r\n                                            { user.name } \r\n                                        </td>\r\n                                    {/* \r\n                                        <td className=\"h4 pt-2 px-0 text-center\">{ user.isAdmin ? (\r\n                                            <i className=\"fas fa-check\" style={{ color: \"#00CC00\" }}></i>\r\n                                        ) : (\r\n                                            <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                                        )}\r\n                                        </td>\r\n                                    */}\r\n                                        <td className=\"mx-0 text-center\">\r\n                                        {/*\r\n                                            <LinkContainer to={`/admin/user/${ user._id }/edit`}>\r\n                                                <Button variant=\"info\"\r\n                                                        className=\"btn-sm mx-2 px-3 border border-dark\">\r\n                                                    <i className=\"fas fa-user-edit\"></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        */}\r\n                                            <Button variant=\"danger\"\r\n                                                    className=\"btn-sm mx-2 px-3 border border-dark\"\r\n                                                    onClick={ () => deleteHandler(user._id) }>\r\n                                                <i className=\"fas fa-user-slash\"></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [alertVariant, setAlertVariant] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate} = userUpdate\r\n\r\n    useEffect( () => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            /*history.push('/admin/userlist/')*/\r\n        }\r\n        else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch( getUserDetails(userId) )\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase())\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // [CASE] Password Doesn't Meet Length Requirement:\r\n        if (password && password.length < 8) {\r\n            setAlertVariant(\"danger\")\r\n            setMessage(\"Password must contain at least 8 characters!\")\r\n        }\r\n        // [CASE] Passwords DON'T match:\r\n        else if(password !== confirmPassword) {\r\n            setAlertVariant(\"danger\")\r\n            setMessage(\"Passwords do not match!\")\r\n        }\r\n        // [CASE] Passwords match or DNE:\r\n        else {\r\n            // Confirmation Message:\r\n            if (window.confirm(\"Are you sure you want to update this user's account information?\")) {\r\n                dispatch( updateUser({\r\n                    _id: user._id,\r\n                    name,\r\n                    email,\r\n                    isAdmin,\r\n                    password\r\n                }))\r\n                setAlertVariant(\"success\")\r\n                setMessage(\"Account Updated\")\r\n            } \r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n            <div>\r\n                <Link to=\"/admin/userlist\" className=\"btn btn-dark mt-3\">\r\n                    Go Back\r\n                </Link>\r\n\r\n                <FormContainer>\r\n                    {/* Handle Error Messages & Successful Updates*/}\r\n                    { message &&\r\n                        <Alert variant={ alertVariant } onClose={() => setMessage('')} dismissible>{ message }</Alert>\r\n                    }\r\n\r\n                    <h2 className=\"m-0 p-0\" id=\"edit-user-title\">\r\n                        <i className=\"fas fa-user-edit\" style={{ fontSize: \"1.25em\", padding: \"10px\"}}></i> {' '}\r\n                        Edit User\r\n                    </h2>\r\n\r\n                    { loadingUpdate && ( <Loader /> )}\r\n                    { errorUpdate && <Message variant=\"danger\">{ errorUpdate }</Message>}\r\n\r\n                    { loading ? ( <Loader /> ) :\r\n                        error ? ( <Message variant=\"danger\">{ error }</Message> \r\n                    ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId=\"name\" className=\"mt-4\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        className={ name ? (\r\n                                            name.length >= 2 ?\r\n                                                \"is-valid\" : \"is-invalid\") : \"\" }\r\n                                        value={ name }\r\n                                        onChange={ (e) => setName(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"email\" className=\"my-4\">\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        className={ email ? (\r\n                                                        validateEmail(email) ?\r\n                                                            \"is-valid\" : \"is-invalid\") : \"\" }\r\n                                        value={ email }\r\n                                        onChange={ (e) => setEmail(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Must provide a valid email address.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <hr></hr>\r\n\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter Password\"\r\n                                        className={ password ? (\r\n                                                        password.length >= 8 ?\r\n                                                            \"is-valid\" : \"is-invalid\") : \"\" }\r\n                                        value={ password }\r\n                                        onChange={ (e) => setPassword(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Required: Must be at least 8 characters long.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"passwordConfirm\" className=\"mb-4\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        className={ (confirmPassword.length >= 8) ? (\r\n                                                        password === confirmPassword ? \r\n                                                            \"is-valid\" : \"is-invalid\") : \"\" }\r\n                                        value={ confirmPassword }\r\n                                        onChange={ (e) => setConfirmPassword(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Required: Must match password field.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <hr></hr>\r\n\r\n                                <Form.Group controlId=\"isadmin\" className=\"mt-4 p-0\">\r\n                                <Form.Label>Account Roles</Form.Label>\r\n                                    <Form.Check\r\n                                        className=\"ml-4 mt-2\"\r\n                                        type=\"switch\"\r\n                                        label=\"ADMIN\"\r\n                                        checked={ isAdmin }\r\n                                        onChange={ () => setIsAdmin(!isAdmin) }\r\n                                    >\r\n                                    </Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Row className=\"d-flex flex-row-reverse mr-2 mb-2\">\r\n                                    <Button \r\n                                        type=\"submit\"\r\n                                        variant=\"warning\"\r\n                                        className=\"btn ml-4 mt-2 px-3\"\r\n                                    >\r\n                                        <span className=\"h6 font-weight-bold\">Update</span>\r\n                                    </Button>\r\n                                </Row>\r\n                            </Form>\r\n                    )\r\n                }\r\n                </FormContainer>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct \r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\n\r\nfunction ProductListScreen({ history , match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector( state => state.productList )\r\n    const {\r\n        loading,\r\n        error,\r\n        products,\r\n        pages,\r\n        page\r\n    } = productList\r\n\r\n    const productDelete = useSelector( state => state.productDelete )\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete\r\n    } = productDelete\r\n\r\n    const productCreate = useSelector( state => state.productCreate )\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct\r\n    } = productCreate\r\n\r\n    const userLogin = useSelector( state => state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        // [CASE] User is NOT Admin:\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        // [CASE] Product was created:\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }\r\n        // [CASE] A new product was not created:\r\n        else {\r\n            dispatch( listProducts(keyword) )\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete,\r\n        successCreate, createdProduct, keyword])\r\n\r\n    const deleteProductHandler = (id) => {\r\n        // Confirmation Message:\r\n        if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n            dispatch( deleteProduct(id) )\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch( createProduct() )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <h1 className=\"my-4 fw-500\">Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3 mt-3 mr-2 py-2\" onClick={ createProductHandler } variant=\"info\">\r\n                        <i className=\" fas fa-plus\"></i>\r\n                        <span className=\"pl-2 h6\">\r\n                            <strong>Create Product</strong>\r\n                        </span>\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            { loadingDelete && <Loader /> }\r\n            { errorDelete && <Message variant=\"danger\">{ errorDelete }</Message> }\r\n\r\n            { loadingCreate && <Loader /> }\r\n            { errorCreate && <Message variant=\"danger\">{ errorCreate }</Message> }\r\n\r\n            { loading ? ( <Loader /> ) :\r\n                error ? ( <Message variant='danger'>{ error }</Message> ) \r\n                    : (\r\n                        <div>\r\n                            <Table  bordered hover responsive\r\n                                    className=\"table table-sm\"\r\n                            >\r\n                                <thead className=\"thead-light\">\r\n                                    <tr>\r\n                                        <th className=\"pl-2\">ID</th>\r\n                                        <th className=\"pl-2\">NAME</th>\r\n                                        <th className=\"pl-2\">PRICE</th>\r\n                                        <th className=\"pl-2\">STOCK</th>\r\n                                        <th className=\"pl-2\">CATEGORY</th>\r\n                                        <th className=\"pl-2\">BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { products.map( product => (\r\n                                        <tr key={ product._id }>\r\n                                            <td className=\"pt-3 pl-2\">{ product._id }</td>\r\n                                            <td className=\"pt-3 pl-2\">\r\n                                                <a \r\n                                                    href={`#/admin/product/${ product._id }/edit`}\r\n                                                    className=\"custom-lime fw-500\"\r\n                                                >\r\n                                                    { product.name }\r\n                                                </a>\r\n                                            </td>\r\n                                            <td className=\"pt-3 pl-2\">${ product.price }</td>\r\n                                            <td className=\"pt-3 pl-2\">{ product.countInStock }</td>\r\n                                            <td className=\"pt-3 pl-2\">{ product.category }</td>\r\n                                            <td className=\"pt-3 pl-2\">{ product.brand }</td>\r\n\r\n                                            <td className=\"mx-0 text-center\">\r\n                                                <a href={`#/product/${ product._id }`} target=\"_blank\" rel=\"noreferrer\" >\r\n                                                    <Button variant=\"outline-secondary\"\r\n                                                            className=\"btn-sm mx-2 px-3\"\r\n                                                    >\r\n                                                        <i className=\"fas fa-eye\" style={{ fontSize: \"1.2em\", paddingTop: \"5px\" }}></i>\r\n                                                    </Button>\r\n                                                </a>\r\n\r\n                                                <Button variant=\"outline-danger\"\r\n                                                        className=\"btn-sm px-3\"\r\n                                                        onClick={ () => deleteProductHandler(product._id) }>\r\n                                                    <i className=\"far fa-trash-alt\" style={{ fontSize: \"1.2em\", paddingTop: \"5px\" }}></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <div className=\"d-flex flex-row justify-content-center mt-3\">                            \r\n                                <Paginate pages={pages} page={page} isAdmin={true} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios  from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport GrowingLoader from '../components/GrowingLoader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [featured, setFeatured] = useState(false)\r\n    const [uploading, setUploading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector( state => state.productDetails )\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector( state => state.productUpdate )\r\n    const {\r\n        error: errorUpdate,\r\n        loading: loadingUpdate,\r\n        success: successUpdate\r\n    } = productUpdate\r\n\r\n    useEffect( () => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            setMessage(\"Product successfully updated\")\r\n            /* history.push('/admin/productlist') */\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch( listProductDetails(productId) )\r\n            }\r\n            else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n                setFeatured(product.featured)\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch( updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description,\r\n            featured,\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        }\r\n        catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n            <div>\r\n                <Link to=\"/admin/productlist\" className=\"btn btn-dark mt-3\">\r\n                    Go Back\r\n                </Link>\r\n\r\n                <FormContainer>\r\n                    {/* Handle Error Messages & Successful Updates*/}\r\n                    { message &&\r\n                        <Alert \r\n                            variant=\"success\"\r\n                            onClose={() => setMessage('')}\r\n                            dismissible\r\n                            className=\"text-center fw-500\"\r\n                        >\r\n                            { message }\r\n                        </Alert>\r\n                    }\r\n\r\n                    <h2 className=\"p-0\" id=\"edit-user-title\">\r\n                    <i className=\"fas fa-edit\" style={{ fontSize: \"1.25em\", padding: \"10px\" }}></i> {' '}\r\n                        Edit Product\r\n                    </h2>\r\n\r\n                    { loadingUpdate && <Loader /> }\r\n                    { errorUpdate && <Message variant=\"danger\">{ errorUpdate }</Message>}\r\n\r\n                    { loading ? ( <Loader /> ) :\r\n                        error ? ( <Message variant=\"danger\">{ error }</Message> \r\n                    ) : (\r\n                            <Form onSubmit={ submitHandler } >\r\n\r\n                                <Form.Group controlId=\"name\" className=\"mt-4\" >\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"name\"\r\n                                        placeholder=\"Enter name\"\r\n                                        className={ name ? \"\" : \"is-invalid\" }\r\n                                        value={ name }\r\n                                        onChange={ (e) => setName(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        Product name is required.\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                \r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"price\" className=\"pr-2 mr-auto\">\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            placeholder=\"Enter price\"\r\n                                            className={ price >= 0 ? \"\" : \"is-invalid\" }\r\n                                            value={ price }\r\n                                            onChange={ (e) => setPrice(e.target.value) }\r\n                                        >\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            A positive price value is required.\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <Form.Group controlId=\"countInStock\" className=\"mx-auto\">\r\n                                        <Form.Label>Stock Level</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            placeholder=\"Enter stock level\"\r\n                                            className={ countInStock >= 0 ? \"\" : \"is-invalid\" }\r\n                                            value={ countInStock }\r\n                                            onChange={ (e) => setCountInStock(e.target.value) }\r\n                                        >\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            A valid stock level is required.\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        \r\n\r\n                                <Form.Group controlId=\"image\" >\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter an image\"\r\n                                        value={ image }\r\n                                        onChange={ (e) => setImage(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n\r\n                                    <Form.File\r\n                                        id=\"image-file\"\r\n                                        label=\"Choose File\"\r\n                                        custom\r\n                                        onChange={ uploadFileHandler }\r\n                                    >\r\n                                    </Form.File>\r\n\r\n                                    { uploading && <GrowingLoader /> }\r\n\r\n                                </Form.Group>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"category\" className=\"pr-2 mr-2\">\r\n                                        <Form.Label>Category</Form.Label>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            aria-label=\"Select product category\"\r\n                                            value={ category }\r\n                                            className={ category ? \"\" : \"is-invalid\" }\r\n                                            onChange={ (e) => setCategory(e.target.value) }\r\n                                        >   \r\n                                            <option>Select a category...</option>\r\n                                            <option value=\"Electronics\">Electronics</option>\r\n                                            <option value=\"Home\">Home</option>\r\n                                            <option value=\"Jewelry\">Jewelry</option>\r\n                                            <option value=\"Kitchen\">Kitchen</option>\r\n                                            <option value=\"Apparel\">Apparel</option>\r\n                                            <option value=\"Other\">Other</option>\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            Please provide a category.\r\n                                        </Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <Form.Group controlId=\"brand\" className=\"mx-auto\">\r\n                                        <Form.Label>Brand</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter brand\"\r\n                                            value={ brand }\r\n                                            onChange={ (e) => setBrand(e.target.value) }\r\n                                        >\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                                <Form.Group controlId=\"featured\">\r\n                                    <Form.Check\r\n                                        className=\"mt-4 mr-4 text-right text-info font-weight-bold\"\r\n                                        type=\"switch\"\r\n                                        label=\"Featured Product\"\r\n                                        checked={ featured }\r\n                                        onChange={ () => setFeatured(!featured) }\r\n                                    >\r\n                                    </Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"description\" className=\"mt-4\">\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        rows={5}\r\n                                        placeholder=\"Enter a description\"\r\n                                        value={ description }\r\n                                        onChange={ (e) => setDescription(e.target.value) }\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Row className=\"d-flex flex-row mr-2 mb-2\">\r\n                                    <Col>\r\n                                        <div className=\"mt-2\">\r\n                                            <a  href={`#/product/${ product._id }`}\r\n                                                className=\"px-2 m-3 text-primary\">\r\n                                                <Button variant=\"outline-primary\">\r\n                                                <i className=\"fas fa-eye\"></i>\r\n                                                    <strong> View Product Page</strong>\r\n                                                </Button>\r\n                                                \r\n                                            </a>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"text-right\">\r\n                                        <Button \r\n                                            type=\"submit\"\r\n                                            variant=\"success\"\r\n                                            className=\"btn ml-4 mt-2 px-3\"\r\n                                        >\r\n                                            <span className=\"h6\">\r\n                                                <strong>Save</strong>\r\n                                            </span>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </FormContainer>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProductEditScreen;\r\n","import { Container } from 'react-bootstrap';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Router>\r\n            <Header />\r\n\r\n                <main className=\"py-3\">\r\n                <Container>\r\n                    <Route path=\"/\" component={HomeScreen} exact />\r\n                    <Route path=\"/product/:id?\" component={ProductScreen} />\r\n                    <Route path=\"/cart/:id?\" component={CartScreen} />\r\n                    <Route path=\"/login\" component={LoginScreen} />\r\n                    <Route path=\"/register\" component={RegisterScreen} />\r\n                    <Route path=\"/profile\" component={ProfileScreen} />\r\n                    <Route path=\"/shipping\" component={ShippingScreen} />\r\n                    <Route path=\"/payment\" component={PaymentScreen} />\r\n                    <Route path=\"/placeorder\" component={PlaceOrderScreen} />\r\n                    <Route path=\"/order/:id\" component={OrderScreen} />\r\n\r\n                    <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n                    <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n                    <Route path=\"/admin/productlist\" component={ProductListScreen} />\r\n                    <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\r\n                    <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n                </Container>\r\n                </main>\r\n\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}